<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:Reflector.UI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:ui="clr-namespace:System.Windows.Documents;assembly=PresentationUI">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/PresentationFramework.Aero;V3.0.0.0;31bf3856ad364e35;component\themes\aero.normalcolor.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <SolidColorBrush x:Key="LightTextBrush" Color="#FF000000" />
  <SolidColorBrush x:Key="DarkTextBrush" Color="#FF888888" />
  <SolidColorBrush x:Key="MainDeep" Color="#40000000" />
  <SolidColorBrush x:Key="MainMedian" Color="#20000000" />
  <SolidColorBrush x:Key="MainLight" Color="#10000000" />
  <Pen x:Key="DisSelectBdr" Brush="#40000000" />
  <SolidColorBrush x:Key="DisSelectBg" Color="#10000000" />
  <SolidColorBrush x:Key="DisSelectFg" Color="#FFEEEEEE" />
  <SolidColorBrush x:Key="TextBrush" Color="#FF000000" />
  <SolidColorBrush x:Key="DisTextBrush" Color="#FF000000" />
  <SolidColorBrush x:Key="DisCommentBrush" Color="#FF808080" />
  <SolidColorBrush x:Key="DisKeywordBrush" Color="#FF000080" />
  <SolidColorBrush x:Key="DisLiteralBrush" Color="#FF800000" />
  <SolidColorBrush x:Key="DisReferBrush" Color="#FF008000" />
  <SolidColorBrush x:Key="NormalBrush" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FFEEEEEE" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FFADADAD" />
  <SolidColorBrush x:Key="GlyphBrush" Color="#FF000000" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey}" Color="#FFB4B4B4" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}" Color="#FF99B4D1" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="#FFB4B4B4" />
  <SolidColorBrush x:Key="{x:Static SystemColors.AppWorkspaceBrushKey}" Color="#FFABABAB" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#FFF0F0F0" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}" Color="#FFA0A0A0" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="#FF696969" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey}" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#FF000000" />
  <SolidColorBrush x:Key="{x:Static SystemColors.DesktopBrushKey}" Color="#FF000000" />
  <SolidColorBrush x:Key="{x:Static SystemColors.GradientActiveCaptionBrushKey}" Color="#FFB9D1EA" />
  <SolidColorBrush x:Key="{x:Static SystemColors.GradientInactiveCaptionBrushKey}" Color="#FFD7F4E2" />
  <SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="#FF6D6D6D" />
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF3399FF" />
  <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="{x:Static SystemColors.HotTrackBrushKey}" Color="#FF0066CC" />
  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey}" Color="#FFBFCDDB" />
  <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrushKey}" Color="#FF434E54" />
  <SolidColorBrush x:Key="{x:Static SystemColors.InfoBrushKey}" Color="#FFFFFFE1" />
  <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey}" Color="#FF000000" />
  <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}" Color="#FFF0F0F0" />
  <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}" Color="#FFF0F0F0" />
  <SolidColorBrush x:Key="{x:Static SystemColors.MenuHighlightBrushKey}" Color="#FF3399FF" />
  <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="#FF000000" />
  <SolidColorBrush x:Key="{x:Static SystemColors.ScrollBarBrushKey}" Color="#FFC8C8C8" />
  <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrushKey}" Color="#FF646464" />
  <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="#FF000000" />
  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#F3F3F3" Offset="0" />
      <GradientStop Color="#EBEBEB" Offset="0.5" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <theme:ButtonChrome Name="Chrome" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderDefaulted" Value="True" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="Control.Foreground" Value="#FFADADAD" />
              <Setter TargetName="Chrome" Property="UIElement.Opacity" Value="0.25" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToggleButton}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type ToggleButton}" />
  <Style x:Key="{x:Type RepeatButton}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
  </Style>
  <Style x:Key="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}" />
  <Style x:Key="CheckRadioFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="EmptyCheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4" />
  <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F" />
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{StaticResource CheckBoxFillNormal}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="#00FFFFFF" SnapsToDevicePixels="True">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle" />
              <Setter Property="Control.Padding" Value="4,0,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{DataTemplateKey {x:Type CollectionViewGroup}}" DataType="{x:Type CollectionViewGroup}">
    <ContentPresenter ContentStringFormat="{TemplateBinding ContentPresenter.ContentStringFormat}" Content="{Binding Path=Name}" />
  </DataTemplate>
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="3,0,3,0" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContentControl}" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
    <Setter Property="Control.Background" Value="#FFF5F5F5" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="#FF959595" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="ContextMenu.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="True">
            <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid>
                <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="2" RadiusX="2" RadiusY="2" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFE2E3E3" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="31,2,0,2" Fill="#FFFFFFFF" />
                <ScrollViewer ScrollViewer.CanContentScroll="True" Grid.ColumnSpan="2" Margin="1,0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <ItemsPresenter Margin="{TemplateBinding Control.Padding}" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ScrollViewer>
              </Grid>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ExpanderArrowFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#FFBFBFBF" Offset="0.5" />
      <GradientStop Color="#FF878787" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowHoverFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFF0F8FE" Offset="0" />
      <GradientStop Color="#FFE0F3FE" Offset="0.3" />
      <GradientStop Color="#FF6FA7C5" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowPressedFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFDCF0FA" Offset="0" />
      <GradientStop Color="#FFC5E6F7" Offset="0.2" />
      <GradientStop Color="#FF5690D0" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
              <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse Name="circle" Width="19" Height="19" Stroke="#FFA9A9A9" HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Path Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF666666" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1,1.5L4.5,5 8,1.5" />
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M1,4.5L4.5,1 8,4.5" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF222222" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B" />
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5" />
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="True">
            <DockPanel>
              <ToggleButton Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0" Style="{StaticResource ExpanderDownHeaderStyle}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}" Foreground="{TemplateBinding Control.Foreground}" Padding="{TemplateBinding Control.Padding}" FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}" FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}" FontWeight="{TemplateBinding Control.FontWeight}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <ContentPresenter Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="{TemplateBinding Control.Padding}" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="True">
              <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
              <Setter Value="{StaticResource ExpanderRightHeaderStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
              <Setter Value="{StaticResource ExpanderUpHeaderStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
              <Setter Value="{StaticResource ExpanderLeftHeaderStyle}" TargetName="HeaderSite" Property="FrameworkElement.Style" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridSplitterPreviewStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="#80000000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="Control.BorderBrush" Value="#FFD5DFE5" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="#00FFFFFF" Background="{TemplateBinding Control.Background}" />
            <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="#FFFFFFFF">
              <Border.OpacityMask>
                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                  <Binding ElementName="Header" Path="ActualWidth" />
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
              </Border.OpacityMask>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="3">
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="#FFFFFFFF" CornerRadius="2" />
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GroupItem}" TargetType="{x:Type GroupItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter />
            <ItemsPresenter Margin="5,0,0,0" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type HeaderedContentControl}" TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header" />
            <ContentPresenter />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="#FF0000FF" />
    <Setter Property="Inline.TextDecorations" Value="Underline" />
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="True">
        <Setter Property="TextElement.Foreground" Value="#FFFF0000" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="False">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="True">
        <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ItemsControl}" TargetType="{x:Type ItemsControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ItemsControl}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Padding" Value="5" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Top" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ListBorder" Color="#828790" />
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Padding="1">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="2,0,0,0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" Focusable="False">
                <GridViewHeaderRowPresenter Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <GridViewHeaderRowPresenter.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}" />
                  </GridViewHeaderRowPresenter.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow" Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="False" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Width="1" Fill="#FFFFFFFF" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
              <Rectangle DockPanel.Dock="Top" Height="1" Fill="#FFFFFFFF" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFF2F2F2" Offset="0" />
      <GradientStop Color="#FFD5D5D5" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFFFFFFF" Offset="0.4091" />
      <GradientStop Color="#FFF7F8F9" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFBDEDFF" Offset="0" />
      <GradientStop Color="#FFB7E7FB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FF8DD6F7" Offset="0" />
      <GradientStop Color="#FF8AD1F5" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9" />
    <Setter Property="FrameworkElement.Width" Value="18" />
    <Setter Property="FrameworkElement.Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="Control.Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Control.Background}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Background" Value="{StaticResource GridViewColumnHeaderBackground}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource GridViewColumnHeaderBorderBackground}" />
    <Setter Property="Control.BorderThickness" Value="0" />
    <Setter Property="Control.Padding" Value="2,0,2,0" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#FFE3F7FF" />
                <Border Grid.RowSpan="2" Padding="{TemplateBinding Control.Padding}">
                  <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
              </Grid>
            </Border>
            <Border Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0" />
            <Border Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1" />
            <Canvas>
              <Thumb Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground}" Property="Border.Background" />
              <Setter TargetName="HeaderHoverBorder" Property="Border.BorderBrush" Value="#FF88CBEB" />
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="PART_HeaderGripper" Property="Control.Background" Value="#00FFFFFF" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground}" Property="Border.Background" />
              <Setter TargetName="HeaderHoverBorder" Property="Border.BorderBrush" Value="#FF95DAF9" />
              <Setter TargetName="HeaderPressBorder" Property="Border.BorderBrush" Value="#FF7A9EB1" />
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#FFBCE4F9" />
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden" />
              <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="1,1,0,0" />
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="UIElement.Opacity" Value="0.4082" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding FrameworkElement.ActualWidth}" Height="{TemplateBinding FrameworkElement.ActualHeight}" />
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" />
              <ControlTemplate.Triggers>
                <Trigger Property="FrameworkElement.Height" Value="Auto">
                  <Setter Property="FrameworkElement.MinHeight" Value="20" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Foreground" Value="#FF042271" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <theme:ListBoxChrome Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" SnapsToDevicePixels="True">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="theme:ListBoxChrome.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ListItemHoverFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFF1FBFF" Offset="0" />
      <GradientStop Color="#FFD5F1FE" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFD9F4FF" Offset="0" />
      <GradientStop Color="#FF9BDDFB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedHoverFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFEAF9FF" Offset="0" />
      <GradientStop Color="#FFC9EDFD" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedInactiveFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFEEEDED" Offset="0" />
      <GradientStop Color="#FFDDDDDD" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1" />
    <Setter Property="Control.Padding" Value="5,2,5,2" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" CornerRadius="2" SnapsToDevicePixels="True">
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11" />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource ListItemHoverFill}" Property="Control.Background" />
              <Setter Property="Control.BorderBrush" Value="#FFCCF0FF" />
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="True">
              <Setter Value="{StaticResource ListItemSelectedFill}" Property="Control.Background" />
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF" />
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedInactiveFill}" Property="Control.Background" />
              <Setter Property="Control.BorderBrush" Value="#FFCFCFCF" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedHoverFill}" Property="Control.Background" />
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#F6F6F6" Offset="0.25" />
      <GradientStop Color="#EAE8E8" Offset="0.25" />
      <GradientStop Color="#DCD9D9" Offset="0.8" />
      <GradientStop Color="White" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="Control.Background" Value="{StaticResource MenuBackground}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" Margin="2,0,0,0" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
  <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
  <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
  <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
  <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFF5F5F5" BorderBrush="#FF959595" BorderThickness="1">
      <Grid>
        <Rectangle Fill="#FFF1F1F1" HorizontalAlignment="Left" Width="28" Margin="2" RadiusX="2" RadiusY="2" />
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#FFE2E3E3" />
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="31,2,0,2" Fill="#FFFFFFFF" />
        <ContentPresenter Grid.ColumnSpan="2" Margin="1,0" />
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Fill="#00FFFFFF" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Fill="#00FFFFFF" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Fill="#00FFFFFF" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Fill="#00FFFFFF" />
            <ContentPresenter Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center" HorizontalAlignment="Center" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}" />
            </Border>
            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="0" Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}" />
            </RepeatButton>
            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="2" Grid.Column="0" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="False" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <RepeatButton.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="MenuItemSelectionFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#34C5EBFF" Offset="0" />
      <GradientStop Color="#3481D8FF" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuItemPressedFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#28717070" Offset="0" />
      <GradientStop Color="#50717070" Offset="0.75" />
      <GradientStop Color="#90717070" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid SnapsToDevicePixels="True">
            <Rectangle Height="1" Margin="30,0,1,1" Fill="#FFE0E0E0" />
            <Rectangle Height="1" Margin="30,1,1,0" Fill="#FFFFFFFF" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="OuterBorder" RadiusX="2" RadiusY="2" />
      <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
      <Rectangle Name="InnerBorder" Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource Checkmark}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070" />
        <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="OuterBorder" RadiusX="2" RadiusY="2" />
      <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
      <Rectangle Name="InnerBorder" Margin="2" />
      <DockPanel>
        <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Path Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight" Data="{StaticResource Checkmark}" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
      <Popup Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
          <ContentControl Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}">
            <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
              <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
            </ScrollViewer>
          </ContentControl>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070" />
        <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070" />
        <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill}" Property="Shape.Fill" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" />
      <Rectangle Name="InnerBorder" Margin="1" RadiusX="2" RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="37" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Border Name="GlyphPanel" Background="#FFE6EFF4" BorderBrush="#FFCDD3E6" BorderThickness="1" CornerRadius="3" Margin="1" Visibility="Hidden" Width="22" Height="22">
          <Path Name="Glyph" Width="9" Height="11" Fill="#FF0C12A1" FlowDirection="LeftToRight" Data="{StaticResource Checkmark}" />
        </Border>
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8071CBF1" />
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#40FFFFFF" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Border.Background" Value="#FFEEE9E9" />
        <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="#FFDBD6D6" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="#FF848589" />
        <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" />
      <Rectangle Name="InnerBorder" Margin="1" Stroke="#00FFFFFF" StrokeThickness="1" RadiusX="2" RadiusY="2" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="37" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Border Name="GlyphPanel" Background="#FFE6EFF4" BorderBrush="#FFCDD3E6" BorderThickness="1" CornerRadius="3" Margin="1" Visibility="Hidden" Width="22" Height="22">
          <Path Name="Glyph" Width="9" Height="11" Fill="#FF0C12A1" FlowDirection="LeftToRight" Data="{StaticResource Checkmark}" />
        </Border>
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed" />
        <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}" />
      </Grid>
      <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Right" VerticalOffset="-3" HorizontalOffset="-2" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
          <ContentControl Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}">
            <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
              <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="True" />
            </ScrollViewer>
          </ContentControl>
        </theme:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#D1DBF4FF" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8571CBF1" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="#FF9A9A9A" />
        <Setter TargetName="GlyphPanel" Property="Border.Background" Value="#FFEEE9E9" />
        <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="#FFDBD6D6" />
        <Setter TargetName="Glyph" Property="Shape.Fill" Value="#FF848589" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Control.Padding" Value="7,2,8,3" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Control.Padding" Value="7,2,8,3" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Control.Padding" Value="2,3,2,3" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Control.Padding" Value="2,3,2,3" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter" />
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#CCD4E9" Offset="0.1" />
        <GradientStop Color="#4881D2" Offset="0.47" />
        <GradientStop Color="#001A5A" Offset="0.47" />
        <GradientStop Color="#007BD6" Offset="0.70" />
        <GradientStop Color="#54DAFF" Offset="0.85" />
        <GradientStop Color="#86FFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#DFEDF9" Offset="0.1" />
        <GradientStop Color="#3086E1" Offset="0.47" />
        <GradientStop Color="#003B91" Offset="0.47" />
        <GradientStop Color="#1793EF" Offset="0.70" />
        <GradientStop Color="#5AD4FF" Offset="0.85" />
        <GradientStop Color="#BDFFFF" Offset="0.95" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#C0D2F5" Offset="0.0" />
        <GradientStop Color="#5E7A9C" Offset="0.47" />
        <GradientStop Color="#00062D" Offset="0.47" />
        <GradientStop Color="#005F9F" Offset="0.70" />
        <GradientStop Color="#1FA4E2" Offset="0.85" />
        <GradientStop Color="#61DAFF" Offset="0.95" />
        <GradientStop Color="#48CFFF" Offset="1.0" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#EBEEF5" Offset="0.5" />
        <GradientStop Color="#D8DDEB" Offset="0.5" />
        <GradientStop Color="#DFE2F0" Offset="1.0" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#6C90C4" Offset="0" />
        <GradientStop Color="#315BB4" Offset="0.5" />
        <GradientStop Color="#002091" Offset="0.5" />
        <GradientStop Color="#08377C" Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#8AB1FB" Offset="0" />
      <GradientStop Color="#002874" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.5" />
        <GradientStop Color="#EEEEEE" Offset="0.5" />
        <GradientStop Color="#B0B0B0" Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowDownArrowFill" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#33B5DA" Offset="0" />
        <GradientStop Color="#335799" Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#E3E8F4" Offset="0.5" />
      <GradientStop Color="#CFD7EB" Offset="0.5" />
      <GradientStop Color="#E9ECFA" Offset="1.0" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CurrentEntryBackground" Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.25" />
  <Style x:Key="NavigationWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=(JournalEntry.Name)}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
    <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Name="Panel" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Path Name="Glyph" SnapsToDevicePixels="False" Margin="7,5" Width="10" Height="10" HorizontalAlignment="Left" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2" Stroke="{TemplateBinding Control.Foreground}" />
            <ContentPresenter ContentSource="Header" Margin="24,5,21,5" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
              <Setter TargetName="Panel" Value="{StaticResource CurrentEntryBackground}" Property="Panel.Background" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M0,5L2.5,8 7,3" />
              <Setter TargetName="Glyph" Property="FrameworkElement.FlowDirection" Value="LeftToRight" />
              <Setter TargetName="Glyph" Property="Shape.StrokeLineJoin" Value="Miter" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Panel.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M1,5L7,5 M5,1L9,5 5,9" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="True" />
                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Glyph" Property="Shape.Stroke" Value="#FFFFFFFF" />
              <Setter TargetName="Glyph" Property="Path.Data" Value="M9,5L3,5 M5,1L1,5 5,9" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationWindowMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" VerticalOffset="2" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=(MenuItem.IsSubmenuOpen), RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                    <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Grid Name="Panel" Width="26" Background="#00FFFFFF" HorizontalAlignment="Right">
              <Border Name="HighlightBorder" SnapsToDevicePixels="True" Visibility="Hidden" BorderThickness="1,1,1,1" BorderBrush="#B0B5BACE" CornerRadius="2">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#20DDDDDD" Offset="0" />
                      <GradientStop Color="#80FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
                <Border BorderBrush="#A0FFFFFF" CornerRadius="1.5" BorderThickness="1" />
              </Border>
              <Path Name="Arrow" SnapsToDevicePixels="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="{TemplateBinding Control.Padding}" Fill="{StaticResource NavigationWindowDownArrowFill}" Stroke="#FFFFFFFF" StrokeThickness="1" StrokeLineJoin="Round" Data="M0,0L4.5,5 9,0z" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="HighlightBorder" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFA5AABE" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationWindowMenu" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationWindowBackButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Background="#00FFFFFF">
            <Ellipse Name="Circle" StrokeThickness="1" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" />
            <Path Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0.75" Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" Fill="{StaticResource NavigationWindowNavigationArrowFill}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillHover}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillPressed}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationWindowForwardButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="24" Height="24" Background="#00FFFFFF">
            <Ellipse Name="Circle" Grid.Column="0" StrokeThickness="1" Fill="{StaticResource NavigationWindowNavigationButtonFillEnabled}" Stroke="{StaticResource NavigationWindowNavigationButtonStrokeEnabled}" />
            <Path Name="Arrow" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="0.75" Data="M0.37,7.69L5.74,14.2A1.5,1.5,0,1,0,10.26,12.27L8.42,10.42 14.9,10.39A1.5,1.5,0,1,0,14.92,5.87L8.44,5.9 10.31,4.03A1.5,1.5,0,1,0,5.79,1.77z" Stroke="{StaticResource NavigationWindowNavigationArrowStrokeEnabled}" Fill="{StaticResource NavigationWindowNavigationArrowFill}" RenderTransformOrigin="0.5,0">
              <Path.RenderTransform>
                <ScaleTransform ScaleX="-1" />
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillDisabled}" TargetName="Circle" Property="Shape.Fill" />
              <Setter TargetName="Circle" Property="Shape.Stroke" Value="#FFB5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Stroke" Value="#B0B5BACE" />
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#D0FFFFFF" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillHover}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource NavigationWindowNavigationButtonFillPressed}" TargetName="Circle" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="NavigationWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid Name="NavChrome" Background="{StaticResource NavigationWindowNavigationChromeBackground}" DockPanel.Dock="Top" Height="30">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="29" />
            <ColumnDefinition Width="26" />
            <ColumnDefinition Width="17" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="23" Margin="1,0,0,1" VerticalAlignment="Center" Style="{StaticResource NavigationWindowMenu}">
            <MenuItem Padding="0,2,5,0" Style="{StaticResource NavigationWindowMenuItem}" ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <MenuItem.ItemsSource>
                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                  <MultiBinding.Bindings>
                    <Binding Path="(NavigationWindow.BackStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="(NavigationWindow.ForwardStack)" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </MenuItem.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0" Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Path.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Path.Fill>
            <Path.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Path.Stroke>
          </Path>
          <Button Style="{StaticResource NavigationWindowBackButtonStyle}" Margin="3,0,2,0" Grid.Column="0" />
          <Button Style="{StaticResource NavigationWindowForwardButtonStyle}" Margin="2,0,0,0" Grid.Column="1" />
        </Grid>
        <Grid>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
          <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
        </Grid>
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter TargetName="NavChrome" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="NavigationWindow.CanGoForward" Value="False" />
          <Condition Property="NavigationWindow.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="UIElement.IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type NavigationWindow}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource NavigationWindowTemplateKey}" />
  </Style>
  <Style x:Key="{x:Type Page}" TargetType="{x:Type Page}">
    <Setter Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#B2B2B2" Offset="0" />
      <GradientStop Color="#8C8C8C" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#BABABA" Offset="0" />
      <GradientStop Color="#C7C7C7" Offset="0.5" />
      <GradientStop Color="#BABABA" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarTopHighlight" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#80FFFFFF" Offset="0.05" />
      <GradientStop Color="#00FFFFFF" Offset="0.25" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#50FFFFFF" Offset="0.5385" />
      <GradientStop Color="#00FFFFFF" Offset="0.5385" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#90FFFFFF" Offset="0.5385" />
      <GradientStop Color="#00FFFFFF" Offset="0.5385" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
    <RadialGradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </RadialGradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" StartPoint="0,1" EndPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
    <RadialGradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0" />
      <GradientStop Color="#00FFFFC4" Offset="1" />
    </RadialGradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#0C000000" Offset="0" />
      <GradientStop Color="#20000000" Offset="0.3" />
      <GradientStop Color="#00000000" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0" />
      <GradientStop Color="#20000000" Offset="0.7" />
      <GradientStop Color="#0C000000" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" MappingMode="Absolute" StartPoint="-100,0" EndPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0" />
      <GradientStop Color="#FF000000" Offset="0.4" />
      <GradientStop Color="#FF000000" Offset="0.6" />
      <GradientStop Color="#00000000" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Foreground" Value="#FF01D328" />
    <Setter Property="Control.Background" Value="{StaticResource ProgressBarBackground}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBarBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="Background" SnapsToDevicePixels="True">
            <Rectangle Fill="{TemplateBinding Control.Background}" RadiusX="2" RadiusY="2" />
            <Border Background="{StaticResource ProgressBarGlassyHighlight}" Margin="1" CornerRadius="2" />
            <Border BorderBrush="#80FFFFFF" Background="{StaticResource ProgressBarTopHighlight}" BorderThickness="1,0,1,1" Margin="1" />
            <Rectangle Name="PART_Track" Margin="1" />
            <Decorator Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
              <Grid Name="Foreground">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="15" />
                  <ColumnDefinition Width="0.1*" />
                  <ColumnDefinition MaxWidth="15" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Rectangle Name="Indicator" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}" />
                <Rectangle Name="Animation" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}">
                  <Rectangle.OpacityMask>
                    <MultiBinding>
                      <MultiBinding.Converter>
                        <theme:ProgressBarHighlightConverter />
                      </MultiBinding.Converter>
                      <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill}" />
                      <Binding Path="ActualWidth" ElementName="Background" />
                      <Binding Path="ActualHeight" ElementName="Background" />
                    </MultiBinding>
                  </Rectangle.OpacityMask>
                </Rectangle>
                <Rectangle Name="LeftDark" Grid.RowSpan="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}" RadiusX="1" RadiusY="1" Margin="1,1,0,1" />
                <Rectangle Name="RightDark" Grid.RowSpan="2" Grid.Column="2" RadiusX="1" RadiusY="1" Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1" />
                <Rectangle Name="LeftLight" Grid.Column="0" Grid.Row="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}" />
                <Rectangle Name="CenterLight" Grid.Column="1" Grid.Row="2" Fill="{StaticResource ProgressBarIndicatorLightingEffect}" />
                <Rectangle Name="RightLight" Grid.Column="2" Grid.Row="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}" />
                <Border Name="Highlight1" Grid.RowSpan="2" Grid.ColumnSpan="3" Background="{StaticResource ProgressBarIndicatorGlassyHighlight}" />
                <Border Name="Highlight2" Grid.RowSpan="2" Grid.ColumnSpan="3" Background="{StaticResource ProgressBarTopHighlight}" />
              </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="Background" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Indicator" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="Foreground" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
              <Setter TargetName="LeftDark" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="RightDark" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="LeftLight" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="CenterLight" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="RightLight" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="False">
              <Setter TargetName="Animation" Property="Shape.Fill" Value="#80B5FFA9" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="#FFF4F4F4" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="#00FFFFFF">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" IsRound="True" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" />
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="True">
              <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle" />
              <Setter Property="Control.Padding" Value="4,0,0,0" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ResizeGripperForeground" StartPoint="0,0.25" EndPoint="1,0.75">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0.3" />
      <GradientStop Color="#BBC5D7" Offset="0.75" />
      <GradientStop Color="#6D83A9" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Control.Background}">
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,2" Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z">
              <Path.Fill>
                <DrawingBrush Viewbox="0,0,3,3" Viewport="0,0,3,3" TileMode="Tile" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M0,0L2,0 2,2 0,2z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Path.Fill>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />
  <LinearGradientBrush x:Key="HorizontalScrollBarBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0" />
      <GradientStop Color="#EDEDED" Offset="0.20" />
      <GradientStop Color="#EDEDED" Offset="0.80" />
      <GradientStop Color="#E3E3E3" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalScrollBarBackground" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0" />
      <GradientStop Color="#EDEDED" Offset="0.20" />
      <GradientStop Color="#EDEDED" Offset="0.80" />
      <GradientStop Color="#E3E3E3" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ScrollChrome Name="Chrome" ScrollChrome.ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <theme:ScrollChrome Name="Chrome" ScrollChrome.ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="Control.Background" Value="{StaticResource VerticalScrollBarBackground}" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" theme:ScrollChrome.ScrollGlyph="UpArrow" />
            <Track Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" IsDirectionReversed="True">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}" />
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}" />
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumb}" theme:ScrollChrome.ScrollGlyph="VerticalGripper" />
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ScrollBarButton}" Grid.Row="2" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}" theme:ScrollChrome.ScrollGlyph="DownArrow" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" Property="Panel.Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto" />
        <Setter Property="FrameworkElement.MinWidth" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="FrameworkElement.MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
        <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollBarBackground}" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" theme:ScrollChrome.ScrollGlyph="LeftArrow" />
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" theme:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource ScrollBarButton}" Grid.Column="2" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}" theme:ScrollChrome.ScrollGlyph="RightArrow" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" Property="Panel.Background" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Style.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" Height="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
  <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
  <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z</Geometry>
  <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
  <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
  <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
  <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0" />
      <GradientStop Color="#F0EFEF" Offset="0.4" />
      <GradientStop Color="#D6D5D5" Offset=".8" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0" />
      <GradientStop Color="#B8E2F9" Offset="0.5" />
      <GradientStop Color="#B0DFF8" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1" />
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25" />
      <GradientStop Color="#5EB4E3" Offset="0.5" />
      <GradientStop Color="#4C8BB4" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B" />
  <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA" />
  <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="22" />
    <Setter Property="FrameworkElement.Width" Value="11" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TranslateTransform X="5.5" Y="11" />
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackground}" Data="{StaticResource SliderThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" Data="{StaticResource SliderThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" Data="{StaticResource SliderThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="18" />
    <Setter Property="FrameworkElement.Width" Value="10" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="180" />
                    <TranslateTransform X="5" Y="9" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="18" />
    <Setter Property="FrameworkElement.Width" Value="10" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TranslateTransform X="5" Y="9" />
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackground}" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1" />
      <GradientStop Color="White" Offset=".9" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="11" />
    <Setter Property="FrameworkElement.Width" Value="22" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90" />
                    <TranslateTransform X="11" Y="5.5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground}" Data="{StaticResource SliderThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource SliderThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource SliderThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="10" />
    <Setter Property="FrameworkElement.Width" Value="18" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90" />
                    <TranslateTransform X="9" Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground}" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="FrameworkElement.Height" Value="10" />
    <Setter Property="FrameworkElement.Width" Value="18" />
    <Setter Property="Control.Foreground" Value="#FF808080" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="True">
            <Canvas.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="-90" />
                    <TranslateTransform X="9" Y="5" />
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </Canvas.RenderTransform>
            <Path Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
            <Path Name="InnerBorder" Stroke="#FFFFFFFF" StrokeThickness="1" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
            <Path Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Control.Foreground" Value="#FF0000FF">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="True">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}" Property="Shape.Fill" />
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4" />
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke" />
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}" Property="Path.Data" />
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#FFC4C4C4" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar Name="TopTick" Grid.Row="0" Visibility="Collapsed" Placement="Top" Fill="{TemplateBinding Control.Foreground}" Height="4" />
              <TickBar Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Placement="Bottom" Fill="{TemplateBinding Control.Foreground}" Height="4" />
              <Border Name="TrackBackground" Grid.Row="1" Margin="5,0" VerticalAlignment="center" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" CornerRadius="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" StrokeThickness="1.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </Canvas>
              </Border>
              <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}" Property="FrameworkElement.Style" />
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}" Property="FrameworkElement.Style" />
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
              <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding FrameworkElement.MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TickBar Name="TopTick" Grid.Column="0" Visibility="Collapsed" Placement="Left" Fill="{TemplateBinding Control.Foreground}" Width="4" />
                  <TickBar Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Placement="Right" Fill="{TemplateBinding Control.Foreground}" Width="4" />
                  <Border Name="TrackBackground" Grid.Column="1" Margin="0,5" HorizontalAlignment="center" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" CornerRadius="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Width="4.0" Visibility="Hidden" StrokeThickness="1.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}" />
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}" Property="FrameworkElement.Style" />
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="2,5,0,5" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}" Property="FrameworkElement.Style" />
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="0,5,2,5" />
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="Both">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="Slider.IsSelectionRangeEnabled" Value="True">
                  <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                  <Setter TargetName="Thumb" Property="Control.Foreground" Value="#FF0000FF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
    <Setter Property="Control.Background" Value="#FFF1EDED" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
    <Setter Property="FrameworkElement.MinWidth" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
    <Setter Property="Control.Padding" Value="3" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />
  <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="4,4,4,4" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
    <Setter Property="Control.Background" Value="#FFF9F9F9" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True" ClipToBounds="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="ColumnDefinition0" />
              <ColumnDefinition Name="ColumnDefinition1" Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Name="RowDefinition0" Height="Auto" />
              <RowDefinition Name="RowDefinition1" Height="*" />
            </Grid.RowDefinitions>
            <TabPanel Name="HeaderPanel" ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" Margin="2,2,2,0" IsItemsHost="True" />
            <Border Name="ContentPanel" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Grid.Column="0" Grid.Row="1">
              <ContentPresenter Name="PART_SelectedContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2" />
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TabItemHotBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#EAF6FD" Offset="0.15" />
      <GradientStop Color="#D9F0FC" Offset=".5" />
      <GradientStop Color="#BEE6FD" Offset=".5" />
      <GradientStop Color="#A7D9F5" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9" />
  <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4" />
  <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1" />
  <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA" />
  <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
    <Setter Property="Control.Foreground" Value="#FF000000" />
    <Setter Property="Control.Padding" Value="6,1,6,1" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="True">
            <Border Name="Bd" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" BorderThickness="1,1,1,0">
              <ContentPresenter Name="Content" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource TabItemHotBackground}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="TabItem.IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="1" />
              <Setter TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}" Property="Border.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="False" />
                <Condition Property="UIElement.IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}" Property="Border.BorderBrush" />
            </MultiTrigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Top" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1" />
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2" />
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Left" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2" />
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="True" />
                <Condition Property="TabItem.TabStripPlacement" Value="Right" />
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2" />
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}" Property="Border.Background" />
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}" Property="Border.BorderBrush" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TextBoxBorder" StartPoint="0,0" EndPoint="0,20" MappingMode="Absolute">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#ABADB3" Offset="0.05" />
      <GradientStop Color="#E2E3EA" Offset="0.07" />
      <GradientStop Color="#E3E9EF" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <theme:ListBoxChrome Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="theme:ListBoxChrome.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}" />
  <Style x:Key="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style TargetType="{x:Type FlowDocument}">
        <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="True" />
      </Style>
      <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
          <Trigger Property="ContentElement.IsMouseOver" Value="True">
            <Setter Property="TextElement.Foreground" Value="#FF0000FF" />
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="False">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="FrameworkElement.MinWidth" Value="10" />
  </Style>
  <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
    <Setter Property="Control.FontFamily" Value="Times New Roman" />
    <Setter Property="PasswordBox.PasswordChar" Value="●" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <theme:ListBoxChrome Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="theme:ListBoxChrome.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <Grid>
              <Border BorderThickness="0,0,1,1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
              <Border BorderThickness="0,0,1,1" Margin="1" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
              <Border Margin="2" Background="{TemplateBinding Control.Background}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ToolTipBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#E4E5F0" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="#FF767676" />
    <Setter Property="Control.Background" Value="{StaticResource ToolTipBackground}" />
    <Setter Property="Control.Foreground" Value="#FF575757" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}" />
    <Setter Property="Control.Padding" Value="5,1,5,4" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="ToolTip.HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="True" CornerRadius="2">
            <Border Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}" CornerRadius="2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
            <ScrollViewer Name="_tv_scrollviewer_" Background="{TemplateBinding Control.Background}" Focusable="False" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
              <Setter TargetName="_tv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <PathGeometry x:Key="TreeArrow">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 6" />
              <LineSegment Point="6 0" />
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="FrameworkElement.Width" Value="16" />
    <Setter Property="FrameworkElement.Height" Value="16" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="16" Height="16" Background="#00FFFFFF" Padding="5,5,5,5">
            <Path Name="ExpandPath" Fill="#FF989898" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
              <Path.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF1BBBFA" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.Padding" Value="1,0,0,0" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <ControlTemplate.Resources>
            <local:LeftMarginMultiplierConverter Length="20" x:Key="len" />
          </ControlTemplate.Resources>
          <StackPanel>
            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding Converter={StaticResource len}, RelativeSource={RelativeSource TemplatedParent}}" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ToggleButton Name="Expander" Grid.Column="0" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" HorizontalAlignment="Right" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter Name="PART_Header" Grid.Column="1" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Grid>
            </Border>
            <ItemsPresenter Name="ItemsHost" />
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="TreeViewItem.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Border.Background" />
              <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type UserControl}" TargetType="{x:Type UserControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <Grid>
        <AdornerDecorator>
          <ContentPresenter />
        </AdornerDecorator>
        <ResizeGrip Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
          <Condition Property="Window.WindowState" Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter TargetName="WindowResizeGrip" Property="UIElement.Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
            <AdornerDecorator>
              <ContentPresenter />
            </AdornerDecorator>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Window.ResizeMode" Value="CanResizeWithGrip">
        <Setter Property="Control.Template" Value="{StaticResource WindowTemplateKey}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <JournalEntryListConverter x:Key="NavigationWindowDropDownLimiter" />
  <Style x:Key="BrowserWindowNavigationButtonJournalEntryStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Path=Name}" />
    <Setter Property="MenuItem.Command" Value="NavigationCommands.NavigateJournal" />
    <Setter Property="MenuItem.CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" />
    <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
  </Style>
  <Style x:Key="BrowserWindowMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.Margin" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <DockPanel Name="Panel" Background="#00FFFFFF">
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                <Border Name="SubMenuBorder" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                  <ScrollViewer ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                    <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <Path Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 2 0 0" Fill="#FFFFFFFF" Stroke="#FFAAAAAA" StrokeThickness="1" Data="{StaticResource DownArrow}" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
              <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="Panel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Panel.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Shape.Fill" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BrowserWindowMenu" TargetType="{x:Type Menu}">
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <DockPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding" Value="0,0,0,0" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Menu.IsMainMenu" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationChromeDownLevelBackButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
    <Setter Property="UIElement.IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseBack" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Ellipse.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Fill>
                    <Ellipse.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Stroke>
                  </Ellipse>
                  <Ellipse Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,5,5,15">
                    <Ellipse.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Fill>
                  </Ellipse>
                  <Path Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403" Data="M0.5,20.468C0.502,20.808 0.536,21.147 0.602,21.481 0.634,21.643 0.694,21.793 0.741,21.949 0.793,22.125 0.833,22.304 0.904,22.476 0.98,22.659 1.084,22.825 1.178,22.997 1.251,23.129 1.309,23.267 1.394,23.394 1.59,23.688 1.812,23.962 2.061,24.211L16.672,38.822C18.755,40.905 22.131,40.905 24.214,38.822 26.297,36.739 26.297,33.363 24.214,31.28L18.705,25.771 42.496,25.771C45.441,25.771 47.829,23.383 47.829,20.438 47.829,17.492 45.441,15.105 42.496,15.105L18.732,15.105 24.241,9.596C26.324,7.513 26.324,4.137 24.241,2.054 22.158,-0.0289999999999981 18.782,-0.0289999999999981 16.699,2.054L2.203,16.549C2.16,16.589 2.108,16.619 2.067,16.66 2.065,16.662 2.062,16.663 2.06,16.666 2.058,16.668 2.057,16.67 2.055,16.672 1.809,16.919 1.59,17.189 1.396,17.479 1.308,17.611 1.247,17.754 1.172,17.892 1.08,18.059 0.98,18.22 0.906,18.397 0.834,18.572 0.792,18.754 0.739,18.935 0.694,19.088 0.635,19.234 0.604,19.393 0.536,19.732 0.5,20.075 0.5,20.419 0.5,20.425 0.498,20.431 0.498,20.438 0.498,20.448 0.5,20.458 0.5,20.468z">
                    <Path.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform X="11.5" Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource BrowserWindowMenu}">
                    <MenuItem Name="NavWinMenu" Style="{StaticResource BrowserWindowMenuItem}" ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}" ItemsSource="{Binding Path=BackStack, Converter={StaticResource NavigationWindowDropDownLimiter}, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Control.Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="UIElement.Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform X="10" Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TranslateTransform X="0" Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NavigationChromeDownLevelForwardButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0" />
    <Setter Property="UIElement.IsEnabled" Value="False" />
    <Setter Property="ButtonBase.Command" Value="NavigationCommands.BrowseForward" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <DockPanel>
            <Rectangle Name="R1" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Viewbox Grid.Column="0" Grid.Row="0">
                <Grid Width="50" Height="50" Margin="15,0,0,0">
                  <Ellipse Name="EllipseBackground" Opacity="1" StrokeThickness="2">
                    <Ellipse.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#B3E2A2" Offset="0" />
                            <GradientStop Color="#25B40E" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Fill>
                    <Ellipse.Stroke>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="black" Offset="0" />
                            <GradientStop Color="#ccffffff" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Stroke>
                  </Ellipse>
                  <Ellipse Name="EllipseShine" Stroke="#00FFFFFF" Margin="5,3,5,15">
                    <Ellipse.Fill>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                          <GradientStopCollection>
                            <GradientStop Color="#aaffffff" Offset="0" />
                            <GradientStop Color="transparent" Offset="1" />
                          </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                      </LinearGradientBrush>
                    </Ellipse.Fill>
                  </Ellipse>
                  <Path Name="Arrow" Fill="#FFFFFFFF" Stroke="#FF086403" Data="M47.82,20.407C47.818,20.067 47.784,19.728 47.718,19.394 47.686,19.232 47.626,19.082 47.579,18.926 47.527,18.75 47.487,18.571 47.416,18.399 47.34,18.216 47.236,18.05 47.142,17.878 47.069,17.746 47.011,17.608 46.926,17.481 46.73,17.187 46.508,16.913 46.259,16.664L31.647,2.053C29.564,-0.0300000000000002 26.188,-0.0300000000000002 24.105,2.053 22.022,4.136 22.022,7.512 24.105,9.595L29.614,15.104 5.823,15.104C2.878,15.104 0.49,17.492 0.49,20.437 0.49,23.383 2.878,25.77 5.823,25.77L29.588,25.77 24.079,31.279C21.996,33.362 21.996,36.738 24.079,38.821 26.162,40.904 29.538,40.904 31.621,38.821L46.118,24.324C46.161,24.284 46.213,24.254 46.254,24.213 46.256,24.211 46.259,24.21 46.261,24.207 46.263,24.205 46.264,24.203 46.266,24.201 46.512,23.954 46.731,23.684 46.925,23.394 47.013,23.262 47.074,23.119 47.149,22.981 47.241,22.814 47.341,22.653 47.415,22.476 47.487,22.301 47.529,22.119 47.582,21.938 47.627,21.785 47.686,21.639 47.717,21.48 47.784,21.141 47.82,20.798 47.821,20.454 47.821,20.448 47.823,20.442 47.823,20.435 47.823,20.427 47.82,20.417 47.82,20.407z">
                    <Path.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <TransformCollection>
                            <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                            <TranslateTransform X="8.5" Y="10" />
                          </TransformCollection>
                        </TransformGroup.Children>
                      </TransformGroup>
                    </Path.RenderTransform>
                  </Path>
                </Grid>
              </Viewbox>
              <DockPanel Grid.Column="1" Grid.Row="0">
                <Rectangle Name="R2" DockPanel.Dock="Right" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="B2" DockPanel.Dock="Bottom" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                <Rectangle Name="L2" DockPanel.Dock="Left" Width="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Rectangle Name="T2" DockPanel.Dock="Top" Height="1" Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Grid Width="10">
                  <Menu Style="{StaticResource BrowserWindowMenu}">
                    <MenuItem Name="NavWinMenu" Style="{StaticResource BrowserWindowMenuItem}" ItemContainerStyle="{StaticResource BrowserWindowNavigationButtonJournalEntryStyle}" ItemsSource="{Binding Path=ForwardStack, Converter={StaticResource NavigationWindowDropDownLimiter}, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type NavigationWindow}}}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                  </Menu>
                </Grid>
              </DockPanel>
            </Grid>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="white" Offset="0" />
                        <GradientStop Color="gray" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsEnabled" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="NavWinMenu" Property="Control.Background" Value="#00FFFFFF" />
              <Setter TargetName="L1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T1" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B1" Property="UIElement.Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="EllipseBackground" Property="Shape.Fill">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Color="#25B40E" Offset="0" />
                        <GradientStop Color="#086403" Offset="1" />
                      </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Arrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                        <TranslateTransform X="10" Y="12" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter TargetName="EllipseShine" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <TranslateTransform X="0" Y="2" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
              <Setter TargetName="L2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="R2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="T2" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="B2" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="BrowserHostWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <AdornerDecorator>
        <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
      </AdornerDecorator>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource BrowserHostWindowTemplateKey}" />
  </Style>
  <ControlTemplate x:Key="BrowserHostDownLevelWindowTemplateKey" TargetType="{x:Type NavigationWindow}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
      <DockPanel>
        <Grid FlowDirection="{x:Static theme:PlatformCulture.FlowDirection}" DockPanel.Dock="Top" Height="30">
          <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
              <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                  <GradientStop Color="silver" Offset="0" />
                  <GradientStop Color="white" Offset="1" />
                </GradientStopCollection>
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Grid.Background>
          <DockPanel LastChildFill="False">
            <Button Style="{StaticResource NavigationChromeDownLevelBackButtonStyle}" DockPanel.Dock="left" Width="40" IsEnabled="{TemplateBinding NavigationWindow.CanGoBack}" />
            <Button Style="{StaticResource NavigationChromeDownLevelForwardButtonStyle}" DockPanel.Dock="left" Width="40" IsEnabled="{TemplateBinding NavigationWindow.CanGoForward}" />
          </DockPanel>
        </Grid>
        <Border>
          <AdornerDecorator>
            <ContentPresenter Name="PART_NavWinCP" ClipToBounds="True" />
          </AdornerDecorator>
        </Border>
      </DockPanel>
    </Border>
  </ControlTemplate>
  <Style x:Key="{x:Static SystemParameters.NavigationChromeDownLevelStyleKey}" TargetType="{x:Type NavigationWindow}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.Template" Value="{StaticResource BrowserHostDownLevelWindowTemplateKey}" />
    <Style.Triggers>
      <Trigger Property="NavigationWindow.ShowsNavigationUI" Value="False">
        <Setter Property="Control.Template" Value="{StaticResource BrowserHostWindowTemplateKey}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer Name="PART_ContentHost" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome Name="Chrome" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" SnapsToDevicePixels="True">
            <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right">
              <Path Name="Arrow" Margin="3,1,0,0" Fill="#FF000000" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome Name="Chrome" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="False" SnapsToDevicePixels="True">
            <Path Name="Arrow" Margin="0,1,0,0" Fill="#FF000000" Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" />
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FFAFAFAF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid Name="Placement" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ElementName=Placement, Path=ActualWidth}">
          <Border Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
            <ScrollViewer>
              <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <theme:ListBoxChrome Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Background="{TemplateBinding Control.Background}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" />
      <TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
      <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
        <Setter Property="Control.Foreground" Value="#FF000000" />
      </Trigger>
      <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
        <Setter TargetName="Border" Property="theme:ListBoxChrome.RenderFocused" Value="True" />
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
        <Setter Property="Control.Background" Value="#FFF4F4F4" />
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Padding" Value="4,3" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Placement="Bottom" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" MinWidth="{Binding ElementName=MainGrid, Path=ActualWidth}">
                <Border Name="DropDownBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                  <ScrollViewer ScrollViewer.CanContentScroll="True">
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Style="{StaticResource ComboBoxReadonlyToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter IsHitTestVisible="False" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter Property="Control.Background" Value="#FFF4F4F4" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="True">
        <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Control.IsTabStop" Value="False" />
        <Setter Property="Control.Padding" Value="3" />
        <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="FrameNavChromeTemplateKey" TargetType="{x:Type Frame}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
      <DockPanel>
        <Grid Background="{StaticResource NavigationWindowNavigationChromeBackground}" DockPanel.Dock="Top" Height="22">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="16" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Menu Name="NavMenu" Grid.ColumnSpan="3" Height="16" Margin="1,0,0,0" VerticalAlignment="Center" Style="{StaticResource NavigationWindowMenu}">
            <MenuItem Padding="0,2,4,0" Style="{StaticResource NavigationWindowMenuItem}" ItemContainerStyle="{StaticResource NavigationWindowNavigationButtonJournalEntryStyle}" IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
              <MenuItem.ItemsSource>
                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                  <MultiBinding.Bindings>
                    <Binding Path="BackStack" RelativeSource="{RelativeSource TemplatedParent}" />
                    <Binding Path="ForwardStack" RelativeSource="{RelativeSource TemplatedParent}" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </MenuItem.ItemsSource>
            </MenuItem>
          </Menu>
          <Path Grid.Column="0" SnapsToDevicePixels="False" IsHitTestVisible="False" Margin="2,0,0,0" Grid.ColumnSpan="3" StrokeThickness="1" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M22.5767,21.035Q27,19.37,31.424,21.035A12.5,12.5,0,0,0,53.5,13A12.5,12.5,0,0,0,37.765,0.926Q27,4.93,16.235,0.926A12.5,12.5,0,0,0,0.5,13A12.5,12.5,0,0,0,22.5767,21.035z">
            <Path.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#A0C2CCE7" Offset="0" />
                    <GradientStop Color="#60FFFFFF" Offset="1" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Path.Fill>
            <Path.Stroke>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Color="#FFB7C2E3" Offset="0.2" />
                    <GradientStop Color="#A0FFFFFF" Offset="0.9" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Path.Stroke>
            <Path.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </Path.LayoutTransform>
          </Path>
          <Button Style="{StaticResource NavigationWindowBackButtonStyle}" Margin="3,0,1,0" Grid.Column="0">
            <Button.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </Button.LayoutTransform>
          </Button>
          <Button Style="{StaticResource NavigationWindowForwardButtonStyle}" Margin="1,0,0,0" Grid.Column="1">
            <Button.LayoutTransform>
              <ScaleTransform ScaleX="0.667" ScaleY="0.667" />
            </Button.LayoutTransform>
          </Button>
        </Grid>
        <ContentPresenter Name="PART_FrameCP" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.CanGoForward" Value="False" />
          <Condition Property="Frame.CanGoBack" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="NavMenu" Property="UIElement.IsEnabled" Value="False" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type Frame}" TargetType="{x:Type Frame}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Frame}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
            <ContentPresenter Name="PART_FrameCP" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Frame.NavigationUIVisibility" Value="Visible">
        <Setter Property="Control.Template" Value="{StaticResource FrameNavChromeTemplateKey}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Frame.JournalOwnership" Value="OwnsJournal" />
          <Condition Property="Frame.NavigationUIVisibility" Value="Automatic" />
        </MultiTrigger.Conditions>
        <Setter Property="Control.Template" Value="{StaticResource FrameNavChromeTemplateKey}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="ToolBarLightFill" Color="#F7F7FF" />
  <SolidColorBrush x:Key="ToolBarMediumFill" Color="#D6DBE7" />
  <SolidColorBrush x:Key="ToolBarDarkFill" Color="#99CCFF" />
  <SolidColorBrush x:Key="ToolBarDisabledFill" Color="#F7F7F7" />
  <SolidColorBrush x:Key="ToolBarDisabledBorder" Color="#B5B2B5" />
  <SolidColorBrush x:Key="ToolBarSeparatorFill" Color="#C6C7C6" />
  <SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF" />
  <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#3399FF" />
  <SolidColorBrush x:Key="ToolBarButtonChecked" Color="#E6F0FA" />
  <SolidColorBrush x:Key="ToolBarButtonPressed" Color="#99CCFF" />
  <SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#3399FF" />
  <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080" />
  <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD" />
  <SolidColorBrush x:Key="ToolBarMenuCheckFill" Color="#E6F0FA" />
  <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarTrayBackground" StartPoint="0,0" EndPoint="688,0" MappingMode="Absolute">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#F4F4F4" Offset="0" />
      <GradientStop Color="#FDFDFD" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarHorizontalBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="0.5" />
      <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarVerticalBackground" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0" />
      <GradientStop Color="#FFFBFF" Offset="0.5" />
      <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
  <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0" />
      <GradientStop Color="#DDDDDD" Offset="0.5" />
      <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarSeparatorFill}" />
    <Setter Property="FrameworkElement.MinWidth" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="2,2,2,2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder}" Property="Border.BorderBrush" />
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Bd" Property="UIElement.Opacity" Value="0.25" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="#00FFFFFF" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonChecked}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonHover}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonHover}" Property="Control.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ToolBarButtonPressedBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonPressed}" Property="Control.Background" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ToolBarButtonPressedBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonPressed}" Property="Control.Background" />
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Value="{StaticResource ToolBarButtonPressedBorder}" Property="Control.BorderBrush" />
              <Setter Value="{StaticResource ToolBarButtonPressed}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type CheckBox}" />
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type RadioButton}" />
  <Style x:Key="ToolBarComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.Width" Value="Auto" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="ButtonBase.ClickMode" Value="Press" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="#00FFFFFF">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
            </Grid.ColumnDefinitions>
            <Border Name="Chrome" Grid.Column="1" Width="13" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
              <Path Name="ArrowDownPath" Data="M2.5,0L8.5,0 5.5,3z" Fill="#FF000000" VerticalAlignment="Center" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonPressedBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonPressed}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="ArrowDownPath" Value="{StaticResource ToolBarDisabledBorder}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="1,0" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.MinHeight" Value="18" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="True">
            <Grid Grid.IsSharedSizeScope="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
              </Grid.ColumnDefinitions>
              <Border Name="Background" Background="{TemplateBinding Control.Background}" />
              <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                <ContentPresenter Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Border>
              <Border Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" />
              <ToggleButton Name="DropDownButton" BorderBrush="#FFFFFFFF" BorderThickness="1" Grid.ColumnSpan="2" Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <TextBox Name="PART_EditableTextBox" Padding="{TemplateBinding Control.Padding}" Margin="1,1,0,1" MinHeight="18" Style="{StaticResource ComboBoxEditableTextBox}" Visibility="Collapsed" VerticalAlignment="Center" IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border Name="DropDownBorder" Background="{TemplateBinding Control.Background}" BorderThickness="1" BorderBrush="{StaticResource ToolBarMenuBorder}">
                  <ScrollViewer>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Background" Value="{StaticResource ToolBarDisabledFill}" Property="Border.Background" />
              <Setter TargetName="Background" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SelectedContentBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.Background" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter TargetName="DropDownButton" Value="{x:Null}" Property="Control.Background" />
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed" />
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Control.BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHover}" Property="Control.Background" />
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Control.BorderBrush" />
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHover}" Property="Control.Background" />
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="True" />
                <Condition Property="ComboBox.IsDropDownOpen" Value="False" />
                <Condition Property="ComboBox.IsEditable" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter Property="Control.Padding" Value="2" />
              <Setter Property="Control.IsTabStop" Value="False" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.Margin" Value="1,0" />
    <Setter Property="Control.Padding" Value="2" />
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
    <Setter Property="FrameworkElement.MinHeight" Value="18" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="True">
            <ScrollViewer Name="PART_ContentHost" VerticalAlignment="Center" MinHeight="18" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledFill}" Property="Border.Background" />
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <Style TargetType="{x:Type Separator}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.Background" Value="{StaticResource ToolBarSeparatorFill}" />
        <Setter Property="FrameworkElement.Height" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="0,1,0,0" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Separator}">
              <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="{x:Type MenuItem}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Background" Value="#00FFFFFF" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="0,1,0,0" />
        <Setter Property="Control.Padding" Value="8,3,8,3" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid Background="#00FFFFFF" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                  <ColumnDefinition Width="14" />
                </Grid.ColumnDefinitions>
                <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0" />
                <ContentPresenter Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden" BorderBrush="{StaticResource ToolBarButtonHoverBorder}" Background="{StaticResource ToolBarMenuCheckFill}" BorderThickness="1">
                  <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ToolBarCheckmark}" />
                </Border>
                <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3" HorizontalAlignment="Right" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="True">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="True">
                  <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
                  <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
                  <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarButtonPressedBorder}" Property="Border.BorderBrush" />
                  <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarDarkFill}" Property="Border.Background" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                  <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
            <Setter Property="Control.Padding" Value="6,2,7,2" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                  <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                    <DockPanel Name="Header">
                      <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ToolBarCheckmark}" />
                      <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      <Popup Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                        <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                          <Border Background="{StaticResource ToolBarSubMenuBackground}" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1">
                            <Grid Grid.IsSharedSizeScope="True">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                              </Grid.ColumnDefinitions>
                              <Rectangle Fill="{StaticResource ToolBarVerticalBackground}" Margin="0,1" />
                              <Rectangle Fill="{StaticResource ToolBarSubMenuBackground}" Grid.ColumnSpan="2" Margin="0,-1,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="1" Width="{Binding ElementName=Header, Path=ActualWidth}" />
                              <ScrollViewer ScrollViewer.CanContentScroll="True" Grid.ColumnSpan="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                              </ScrollViewer>
                            </Grid>
                          </Border>
                        </theme:SystemDropShadowChrome>
                      </Popup>
                    </DockPanel>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                      <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsChecked" Value="True">
                      <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
                      <Setter TargetName="Border" Value="{StaticResource ToolBarMenuBorder}" Property="Border.BorderBrush" />
                      <Setter TargetName="Border" Value="{StaticResource ToolBarOpenHeaderBackground}" Property="Border.Background" />
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                      <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                      <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
                      <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                      <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="MenuItem.Role" Value="TopLevelItem">
            <Setter Property="FrameworkElement.Margin" Value="0,1,0,1" />
            <Setter Property="Control.Padding" Value="7,1,8,2" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                  <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                    <DockPanel>
                      <ContentPresenter Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                      <Path Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ToolBarCheckmark}" />
                      <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </DockPanel>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsChecked" Value="True">
                      <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                      <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
            <Setter Property="DockPanel.Dock" Value="Top" />
            <Setter Property="Control.Padding" Value="8,3,8,3" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                  <Grid Background="#00FFFFFF" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                      <ColumnDefinition Width="14" />
                    </Grid.ColumnDefinitions>
                    <Border Name="Border" Background="{TemplateBinding Control.Background}" BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0" />
                    <ContentPresenter Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden" BorderBrush="{StaticResource ToolBarButtonHoverBorder}" Background="{StaticResource ToolBarMenuCheckFill}" BorderThickness="1">
                      <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2" Data="{StaticResource ToolBarCheckmark}" />
                    </Border>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0" Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}" />
                    <Popup Name="PART_Popup" Placement="Right" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                      <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                        <Border Background="{StaticResource ToolBarSubMenuBackground}" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Grid.IsSharedSizeScope="True">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource ToolBarVerticalBackground}" Margin="0,1" />
                            <ScrollViewer ScrollViewer.CanContentScroll="True" Grid.ColumnSpan="2" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                              <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                          </Grid>
                        </Border>
                      </theme:SystemDropShadowChrome>
                    </Popup>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
                      <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsChecked" Value="True">
                      <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                      <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="MenuItem.IsHighlighted" Value="True">
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}" Property="Border.BorderBrush" />
                      <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
                      <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarButtonPressedBorder}" Property="Border.BorderBrush" />
                      <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarDarkFill}" Property="Border.Background" />
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                      <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
                      <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
                      <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                      <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
  </Style>
  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle>
              <Rectangle.Fill>
                <DrawingBrush Viewbox="0,0,4,4" Viewport="0,0,4,4" TileMode="Tile" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="#FFFFFFFF" Geometry="M1,1L1,3 3,3 3,1z" />
                        <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M0,0L0,2 2,2 2,0z" />
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Rectangle.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,3,3,0" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1,1.5L6,1.5" />
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0,0.5L5,0.5" />
              <Path Fill="#FFFFFFFF" Data="M0.5,4L6.5,4 3.5,7z" />
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M-0.5,3L5.5,3 2.5,6z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,0,3,3" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
            <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
              <Path Stroke="#FFFFFFFF" Data="M1.5,1L1.5,6" />
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M0.5,0L0.5,5" />
              <Path Fill="#FFFFFFFF" Data="M3.5,0.5L7,3.5 4,6.5z" />
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M3,-0.5L6,2.5 3,5.5z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" Property="Border.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarHorizontalBackground}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" SnapsToDevicePixels="True">
            <Grid Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup Name="OverflowPopup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" Focusable="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                  <Border Background="{StaticResource ToolBarSubMenuBackground}" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1">
                    <ToolBarOverflowPanel Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" />
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border Name="MainPanelBorder" Margin="0,0,11,0" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Control.Padding}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Margin="-3,-1,0,0" Width="10" Padding="6,5,1,6" />
                <ContentPresenter Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                <ToolBarPanel Name="PART_ToolBarPanel" IsItemsHost="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.HasOverflowItems" Value="False">
              <Setter TargetName="OverflowGrid" Property="UIElement.Visibility" Value="Hidden" />
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,0" />
            </Trigger>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="False" />
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5" />
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="True" />
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1" />
              <Setter TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" Property="FrameworkElement.Style" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto" />
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0" />
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1" />
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right" />
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11" />
              <Setter Value="{StaticResource ToolBarVerticalBackground}" Property="Control.Background" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
    <Setter Property="ToolBarTray.Background" Value="{StaticResource ToolBarTrayBackground}" />
  </Style>
</ResourceDictionary>